// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Company {
  id       BigInt    @id @db.BigInt @default(autoincrement())
  cnpj      String   @unique  
  name      String   @unique
  address   String?
  addressNumber String?
  neighborhood String?
  city  String?
  postCode  Int?
  contacts CompanyContact[]
  config CompanyConfig?
  users User[]
  productCategory ProductCategory[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}


enum CompanyContactType {
  PHONE
  EMAIL
  WHATAPP
  TELEGRAN
}
model CompanyContact {
  id        BigInt    @id @db.BigInt @default(autoincrement())
  type      CompanyContactType
  value     String @unique
  company   Company @relation(fields: [companyId], references: [id])
  companyId BigInt 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model CompanyConfig {
  id         BigInt    @id @db.BigInt @default(autoincrement())
  colorTheme String?
  logo       String?
  company    Company @relation(fields: [companyId], references: [id])
  companyId  BigInt @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

}

model ProductCategory {
  id        BigInt    @id @db.BigInt @default(autoincrement())
  name      String
  description String
  company   Company @relation(fields: [companyId], references: [id])
  companyId BigInt @unique
  product Product?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Product {
  id        BigInt    @id @db.BigInt @default(autoincrement())
  name      String
  value     Decimal
  discount  Decimal
  description String
  smallDescription String
  discountUntil DateTime ?
  photo String?
  thumb String?
  quantity Int
  sku       String?
  publish   DateTime?
  category   ProductCategory @relation(fields: [categoryId], references: [id])
  categoryId BigInt @unique 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model User {
  id         BigInt    @id @db.BigInt @default(autoincrement())
  name       String
  email      String
  password   String
  company    Company? @relation(fields: [companyId], references: [id])
  companyId  BigInt? 
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}



