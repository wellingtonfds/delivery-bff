generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id              BigInt            @id @default(autoincrement())
  cnpj            String?            @unique
  name            String            @unique
  address         String?
  addressNumber   String?
  neighborhood    String?
  city            String?
  postCode        Int?
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  config          CompanyConfig?
  contacts        CompanyContact[]
  productCategory ProductCategory[]
  users           User[]
}

model CompanyContact {
  id        BigInt             @id @default(autoincrement())
  type      CompanyContactType
  value     String             @unique
  companyId BigInt
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
  company   Company            @relation(fields: [companyId], references: [id])
}

model CompanyConfig {
  id         BigInt   @id @default(autoincrement())
  colorTheme String?
  logo       String?
  companyId  BigInt   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  company    Company  @relation(fields: [companyId], references: [id])
}

model ProductCategory {
  id          BigInt    @id @default(autoincrement())
  name        String
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  product     Product[]
  companyId   BigInt
  company     Company   @relation(fields: [companyId], references: [id])
}

model Product {
  id               BigInt            @id @default(autoincrement())
  name             String
  value            Decimal?
  discount         Decimal?
  description      String?
  smallDescription String
  discountUntil    DateTime?
  photo            String?
  thumb            String?
  quantity         Int?
  sku              String?
  publish          DateTime?
  categoryId       BigInt
  category         ProductCategory   @relation(fields: [categoryId], references: [id])
  productQuestion  ProductQuestion[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model ProductQuestion {
  id         BigInt     @id @default(autoincrement())
  productId  BigInt
  product    Product[]
  questionId BigInt
  question   Question[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Question {
  id                BigInt               @id @default(autoincrement())
  title             String
  subtitle          String?
  thumb             String?
  require           Boolean              @default(false)
  maxChoose         Int                  @default(1)
  minxChoose        Int                  @default(0)
  type              ResponseQuestionType
  productQuestionId BigInt
  productQuestion   ProductQuestion      @relation(fields: [productQuestionId], references: [id])
  options           Option[]
  createdAt         DateTime             @default(now())
  updatedAt         DateTime             @updatedAt
}

model Option {
  id          BigInt     @id @default(autoincrement())
  name        String
  description String
  value       Decimal?
  discount    Decimal?
  thumb       String
  questionId  BigInt
  question    Question   @relation(fields: [questionId], references: [id])
  response    Response[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Response {
  id        BigInt   @id @default(autoincrement())
  value     String
  optionId  BigInt
  userId    BigInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  option    Option   @relation(fields: [optionId], references: [id])
}



model User {
  id        BigInt     @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  companyId BigInt?
  company   Company?   @relation(fields: [companyId], references: [id])
  response  Response[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

enum ResponseQuestionType {
  QUANTITATIVE
  BOOLEAN
  TEXT
}

enum CompanyContactType {
  PHONE
  EMAIL
  WHATAPP
  TELEGRAN
}
